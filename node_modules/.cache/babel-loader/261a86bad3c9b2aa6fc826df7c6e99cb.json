{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\masum\\\\react_projects\\\\portfolio\\\\src\\\\components\\\\works\\\\Works.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./works.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Works() {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const data = [{\n    id: \"1\",\n    icon: \"./assets/mobile.png\",\n    title: \"Accessible Running Track\",\n    desc: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"This is a smartphone application to give people with visual impairments feedback on running track.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"While a person walks, the app takes images of the track, processes them and determines the angle of the person.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Finally, it provides verbal feedback if the person is veering from the track.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The application was built upon an existing app using C# and OpenCV.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this),\n    img1: \"./assets/csharp.png\",\n    img2: \"./assets/opencv.png\"\n  }, {\n    id: \"2\",\n    icon: \"./assets/globe.png\",\n    title: \"GCN Distributed Training\",\n    desc: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The system trains Graph Convolutional Network (GCN) in multiple GPUs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"To maintain the accuracy, the system performs communication efficient sampling.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The system was evaluated with multiple datasets such as Reddit, Amazon, Ppi etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The system was implemented with Pytorch and Python.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this),\n    img1: \"./assets/pytorch.png\",\n    img2: \"./assets/python.png\"\n  }, {\n    id: \"3\",\n    icon: \"./assets/writing.png\",\n    title: \"Mortality & Readmission Prediction\",\n    desc: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The system of two generative models for mortality and hospital readmission prediction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Tested the models on Uiowa Healthcare data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Wrote SQL query to retrieve necessary part of the data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The system was implemented with Pytorch and Python.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this),\n    img1: \"./assets/python.png\",\n    img2: \"./assets/SQL.png\"\n  }];\n\n  const handleClick = way => {\n    way === \"left\" ? setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : 2) : setCurrentSlide(currentSlide < data.length - 1 ? currentSlide + 1 : 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"works\",\n    id: \"works\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      style: {\n        transform: `translateX(-${currentSlide * 100}vw)`\n      },\n      children: data.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leftContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: d.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: d.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: d.img1,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: d.img2,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"assets/right-arrow-icon.jpg\",\n      className: \"arrow left\",\n      alt: \"\",\n      onClick: () => handleClick(\"left\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"assets/right-arrow-icon.jpg\",\n      className: \"arrow right\",\n      alt: \"\",\n      onClick: () => handleClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Works, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n\n_c = Works;\n\nvar _c;\n\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"sources":["C:/Users/masum/react_projects/portfolio/src/components/works/Works.jsx"],"names":["useState","Works","currentSlide","setCurrentSlide","data","id","icon","title","desc","img1","img2","handleClick","way","length","transform","map","d"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./works.scss\";\n\nexport default function Works() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const data = [\n    {\n      id: \"1\",\n      icon: \"./assets/mobile.png\",\n      title: \"Accessible Running Track\",\n      desc:\n      \n        <ul>\n          <li>This is a smartphone application to give people with visual impairments feedback on running track.</li>\n          <li>While a person walks, the app takes images of the track, processes them and determines the angle of the person.</li>\n          <li>Finally, it provides verbal feedback if the person is veering from the track.</li>\n          <li>The application was built upon an existing app using C# and OpenCV.</li>\n        </ul>,\n        \n      img1: \"./assets/csharp.png\",\n      img2: \"./assets/opencv.png\",\n    },\n    {\n      id: \"2\",\n      icon: \"./assets/globe.png\",\n      title: \"GCN Distributed Training\",\n      desc:           \n        <ul>\n          <li>The system trains Graph Convolutional Network (GCN) in multiple GPUs.</li>\n          <li>To maintain the accuracy, the system performs communication efficient sampling.</li>\n          <li>The system was evaluated with multiple datasets such as Reddit, Amazon, Ppi etc.</li>\n          <li>The system was implemented with Pytorch and Python.</li>\n        </ul>,\n      img1: \"./assets/pytorch.png\",\n      img2: \"./assets/python.png\",\n      \n  \n    },\n    {\n      id: \"3\",\n      icon: \"./assets/writing.png\",\n      title: \"Mortality & Readmission Prediction\",\n      desc:\n        <ul>\n          <li>The system of two generative models for mortality and hospital readmission prediction.</li>\n          <li>Tested the models on Uiowa Healthcare data.</li>\n          <li>Wrote SQL query to retrieve necessary part of the data.</li>\n          <li>The system was implemented with Pytorch and Python.</li>\n        </ul>,\n  \n      img1: \"./assets/python.png\",\n      img2: \"./assets/SQL.png\",\n    },\n  ];\n\n  const handleClick = (way) => {\n    way === \"left\"\n      ? setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : 2)\n      : setCurrentSlide(currentSlide < data.length - 1 ? currentSlide + 1 : 0);\n  };\n  \n  return (\n    \n    <div className=\"works\" id=\"works\">\n       \n      <div\n        className=\"slider\"\n        style={{ transform: `translateX(-${currentSlide * 100}vw)` }}\n      >\n        {data.map((d) => (\n          <div className=\"container\">\n            \n            <div className=\"item\">\n            \n              <div className=\"left\">\n              <h1>Projects</h1> \n                <div className=\"leftContainer\">\n                  {/* <div className=\"imgContainer\">\n                    <img src={d.icon} alt=\"\" />\n                  </div> */}\n                  <h3>{d.title}</h3>\n                  <span>{d.desc}</span>\n                  \n                  {/* <span>Projects</span> */}\n                </div>\n              </div>\n              <div className=\"right\">\n                {/* <h2>Technology Used</h2> */} \n                <img src={d.img1} alt=\"\" />\n                <img src={d.img2} alt=\"\" />\n                \n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <img\n        src=\"assets/right-arrow-icon.jpg\"\n        className=\"arrow left\"\n        alt=\"\"\n        onClick={() => handleClick(\"left\")}\n      />\n      <img\n        src=\"assets/right-arrow-icon.jpg\"\n        className=\"arrow right\"\n        alt=\"\"\n        onClick={() => handleClick()}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}